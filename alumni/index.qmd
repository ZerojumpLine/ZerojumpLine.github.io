---
title: "Alumni"
description: |
  Meet our former lab members and learn about their career paths.<br>
  Discover where our alumni are now and their contributions to the field.

format: 
  html: 
    page-layout: full
    title-block-banner: false

header-includes: >
  <link rel="stylesheet" href="../assets/alumni-table.css">
  <link rel="stylesheet" href="../assets/alumni-title.css">
resources:
  - ../assets/alumni-table.css
  - ../assets/alumni-title.css
---

::: {.alumni-container}

::: {.alumni-controls}
::: {.order-controls}
<select id="orderSelect" class="order-select">
  <option value="name">Order By Name</option>
  <option value="role">Order By Role</option>
  <option value="start">Order By Start Date</option>
  <option value="end">Order By End Date</option>
</select>
:::

::: {.filter-controls}
<input type="text" id="filterInput" class="filter-input" placeholder="Filter">
:::
:::

::: {.alumni-table-container}
<table class="alumni-table" id="alumniTable">
  <thead>
    <tr>
      <th>Name</th>
      <th>Role/Affiliation</th>
      <th>Started</th>
      <th>Ended</th>
    </tr>
  </thead>
  <tbody>
  
    <tr data-name="Bowen Guo" data-role="UG Student" data-start="2025-02" data-end="2025-07">
      <td class="name-cell">
        <img src="bowen_guo/bowen_guo.jpg" alt="Bowen Guo" class="profile-image">
        <a href="bowen_guo/" class="alumni-name">Bowen Guo</a>
      </td>
      <td>UG Student, Fudan University</td>
      <td>Feb 2025</td>
      <td>Jul 2025</td>
    </tr>



  </tbody>
</table>
:::

:::

<script>
document.addEventListener('DOMContentLoaded', function() {
  const table = document.getElementById('alumniTable');
  const tbody = table.querySelector('tbody');
  const rows = Array.from(tbody.querySelectorAll('tr'));
  const orderSelect = document.getElementById('orderSelect');
  const filterInput = document.getElementById('filterInput');

  // Sorting function
  function sortTable(column) {
    rows.sort((a, b) => {
      let aValue, bValue;
      
      switch(column) {
        case 'name':
          aValue = a.getAttribute('data-name').toLowerCase();
          bValue = b.getAttribute('data-name').toLowerCase();
          break;
        case 'role':
          aValue = a.getAttribute('data-role').toLowerCase();
          bValue = b.getAttribute('data-role').toLowerCase();
          break;
        case 'start':
          aValue = a.getAttribute('data-start');
          bValue = b.getAttribute('data-start');
          break;
        case 'end':
          aValue = a.getAttribute('data-end');
          bValue = b.getAttribute('data-end');
          break;
        default:
          return 0;
      }
      
      return aValue.localeCompare(bValue);
    });
    
    // Re-append sorted rows
    rows.forEach(row => tbody.appendChild(row));
  }

  // Filtering function
  function filterTable(searchTerm) {
    rows.forEach(row => {
      const name = row.getAttribute('data-name').toLowerCase();
      const role = row.getAttribute('data-role').toLowerCase();
      const affiliation = row.cells[1].textContent.toLowerCase();
      
      const matches = name.includes(searchTerm.toLowerCase()) || 
                     role.includes(searchTerm.toLowerCase()) || 
                     affiliation.includes(searchTerm.toLowerCase());
      
      row.style.display = matches ? '' : 'none';
    });
  }

  // Event listeners
  orderSelect.addEventListener('change', function() {
    sortTable(this.value);
  });

  filterInput.addEventListener('input', function() {
    filterTable(this.value);
  });
});
</script> 